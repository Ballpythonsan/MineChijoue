package wacky.chijoue;

//色とブロックid,ダメージ値,高度上下
public enum Color {
	COBWEB_1(140,140,140,30,0,-1),
	COBWEB_2(171,171,171,30,0,0),
	COBWEB_3(199,199,199,30,0,1),
	BLACK_1	( 17, 17, 17,35,15,-1),
	BLACK_2	( 21, 21, 21,35,15,0),
	BLACK_3	( 25, 25, 25,35,15,1),
	DIAMOND_1(64,154,150,57,0,-1),
	DIAMOND_2(79,188,183,57,0,0),
	DIAMOND_3(92,219,213,57,0,1),
	EMERALD_1( 0,153, 40,133,0,-1),
	EMERALD_2( 0,187, 50,133,0,0),
	EMERALD_3( 0,217, 58,133,0,1),
	GOLD_1	(176,168, 54,41,0,-1),
	GOLD_2	(215,205, 66,41,0,0),
	GOLD_3	(250,238, 77,41,0,1),
	BLUE_1	(36,53,125,35,11,-1),
	BLUE_2	(44,65,153,35,11,0),
	BLUE_3	(51,76,178,35,11,1),
	BROWN_1	(72,53,36,35,12,-1),
	BROWN_2	(88,65,44,35,12,0),
	BROWN_3	(102,76,51,35,12,1),
	CLAY_1	(115,118,129,82,0,-1),
	CLAY_2	(141,144,158,82,0,0),
	CLAY_3	(164,168,184,82,0,1),
	CYAN_1	(53,89,108,35,9,-1),
	CYAN_2	(65,109,132,35,9,0),
	CYAN_3	(76,127,153,35,9,1),
	DIRT_1	(106,76,54,3,0,-1),
	DIRT_2	(130,94,66,3,0,0),
	DIRT_3	(151,109,77,3,0,1),
	SLIME_1	(89,125,39,165,0,-1),
	SLIME_2	(109,153,48,165,0,0),
	SLIME_3	(127,178,56,165,0,1),
	GREEN_1	(72,89,36,35,13,-1),
	GREEN_2	(88,109,44,35,13,0),
	GREEN_3	(102,127,51,35,13,1),
	GREY_1	(53,53,53,35,7,-1),
	GREY_2	(65,65,65,35,7,0),
	GREY_3	(76,76,76,35,7,1),
	ICE_1	(112,112,180,174,0,-1),
	ICE_2	(138,138,220,174,0,0),
	ICE_3	(160,160,255,174,0,1),
	IRON_1(117,117,117,42,0,-1),
	IRON_2(144,144,144,42,0,0),
	IRON_3(167,167,167,42,0,1),
	LAPIS_1(52,90,180,22,0,-1),
	LAPIS_2(63,110,220,22,0,0),
	LAPIS_3(74,128,255,22,0,1),
	REDSTONE_1(180,0,0,152,0,-1),
	REDSTONE_2(220,0,0,152,0,0),
	REDSTONE_3(255,0,0,152,0,1),
	LEAVE_1(0,87,0,18,0,-1),
	LEAVE_2(0,106,0,18,0,0),
	LEAVE_3(0,124,0,18,0,1),
	LIGHTBLUE_1(72,108,152,35,3,-1),
	LIGHTBLUE_2(88,132,186,35,3,0),
	LIGHTBLUE_3(102,153,216,35,3,1),
	LIGHTGRAY_1(108,108,108,35,8,-1),
	LIGHTGRAY_2(132,132,132,35,8,0),
	LIGHTGRAY_3(153,153,153,35,8,1),
	LIME_1(89,144,17,35,5,-1),
	LIME_2(109,176,21,35,5,0),
	LIME_3(127,204,25,35,5,1),
	MAGENTA_1(125,53,152,35,2,-1),
	MAGENTA_2(153,65,186,35,2,0),
	MAGENTA_3(178,76,216,35,2,1),
	NETHERRACK_1(79,1,0,87,0,-1),
	NETHERRACK_2(96,1,0,87,0,0),
	NETHERRACK_3(112,2,0,87,0,1),
	OAK_1(101,84,51,5,0,-1),
	OAK_2(123,103,62,5,0,0),
	OAK_3(143,119,72,5,0,1),
	ORANGE_1(152,89,36,35,1,-1),
	ORANGE_2(186,109,44,35,1,0),
	ORANGE_3(216,127,51,35,1,1),
	PINK_1(170,89,116,35,6,-1),
	PINK_2(208,109,142,35,6,0),
	PINK_3(242,127,165,35,6,1),
	SPRUCE_1(94,60,34,5,1,-1),
	SPRUCE_2(114,74,42,5,1,0),
	SPRUCE_3(129,86,49,5,1,1),
	PURPLE_1(89,44,125,35,10,-1),
	PURPLE_2(109,54,153,35,10,0),
	PURPLE_3(127,63,178,35,10,1),
	QUARTZ_1(180,177,172,155,0,-1),
	QUARTZ_2(220,217,211,155,0,0),
	QUARTZ_3(255,252,245,155,0,1),
	RED_1(108,36,36,35,14,-1),
	RED_2(132,44,44,35,14,0),
	RED_3(153,51,51,35,14,1),
	SAND_1(174,164,115,24,0,-1),
	SAND_2(213,201,140,24,0,0),
	SAND_3(247,233,163,24,0,1),
	STONE_1(79,79,79,1,0,-1),
	STONE_2(96,96,96,1,0,0),
	STONE_3(112,112,112,1,0,1),
	//WATER_1(45,45,180,9,0,-1),
	//WATER_2(55,55,220,9,0,0),
	//WATER_3(64,64,255,9,0,1),
	WHITE_1(180,180,180,35,0,-1),
	WHITE_2(220,220,220,35,0,0),
	WHITE_3(255,255,255,35,0,1),
	YELLOW_1(161,161,36,35,4,-1),
	YELLOW_2(197,197,44,35,4,0),
	YELLOW_3(229,229,51,35,4,1),

	WHITET_1(147,124,113,159,0,-1),//テラコッタx16色
	WHITET_2(180,152,138,159,0,0),
	WHITET_3(209,177,161,159,0,1),
	ORANGET_1(112,57,25,159,1,-1),
	ORANGET_2(137,70,31,159,1,0),
	ORANGET_3(159,82,36,159,1,1),
	MAGENTAT_1(105,61, 76,159,2,-1),
	MAGENTAT_2(128,75, 93,159,2,0),
	MAGENTAT_3(149,87,108,159,2,1),
	LIGHTBLUET_1(79, 76, 97,159,3,-1),
	LIGHTBLUET_2(96, 93,119,159,3,0),
	LIGHTBLUET_3(112,108,138,159,3,1),
	YELLOWT_1(161, 93,25,159,4,-1),
	YELLOWT_2(160,114,31,159,4,0),
	YELLOWT_3(186,133,36,159,4,1),
	LIMET_1(72,82,37,159,5,-1),
	LIMET_2(88,100,45,159,5,0),
	LIMET_3(103,117,53,159,5,1),
	PINKT_1(112,54,55,159,6,-1),
	PINKT_2(138,66,67,159,6,0),
	PINKT_3(160,77,78,159,6,1),
	GREYT_1	(40,28,24,159,7,-1),
	GREYT_2	(49,35,30,159,7,0),
	GREYT_3	(57,41,35,159,7,1),
	LIGHTGRAYT_1(95,75,69,159,8,-1),
	LIGHTGRAYT_2(116,92,84,159,8,0),
	LIGHTGRAYT_3(135,107,98,159,8,1),
	CYANT_1	(61,64,64,159,9,-1),
	CYANT_2	(75,79,79,159,9,0),
	CYANT_3	(87,92,92,159,9,1),
	PURPLET_1(86,51,62,159,10,-1),
	PURPLET_2(105,62,75,159,10,0),
	PURPLET_3(122,73,88,159,10,1),
	BLUET_1	(53,43,64,159,11,-1),
	BLUET_2	(65,53,79,159,11,0),
	BLUET_3	(76,62,92,159,11,1),
	BROWNT_1(53,35,24,159,12,-1),
	BROWNT_2(65,43,30,159,12,0),
	BROWNT_3(76,50,35,159,12,1),
	GREENT_1(53,57,29,159,13,-1),
	GREENT_2(65,70,36,159,13,0),
	GREENT_3(76,82,42,159,13,1),
	REDT_1(100,42,32,159,14,-1),
	REDT_2(122,51,39,159,14,0),
	REDT_3(142,60,46,159,14,1),
	BLACKT_1( 26, 15, 11,159,15,-1),
	BLACKT_2( 31, 18, 13,159,15,0),
	BLACKT_3( 37, 22, 16,159,15,1),

	
	CRIMSONN_1(133, 33, 34,487,0,-1),
	CRIMSONN_2(163, 41, 42,487,0,0),
	CRIMSONN_3(189, 48, 49,487,0,1),
	CRIMSONS_1(104, 44, 68,497,0,-1),
	CRIMSONS_2(127, 54, 83,497,0,0),
	CRIMSONS_3(148, 63, 97,497,0,1),
	CRIMSONH_1( 64, 17, 20,554,0,-1),
	CRIMSONH_2( 79, 21, 25,554,0,0),
	CRIMSONH_3( 92, 25, 29,554,0,1),
	
	WARPEDN_1( 15, 88, 94,488,0,-1),
	WARPEDN_2( 18,108,115,488,0,0),
	WARPEDN_3( 22,126,134,488,0,1),
	WARPEDS_1( 40,100, 98,498,0,-1),
	WARPEDS_2( 50,122,120,498,0,0),
	WARPEDS_3( 58,142,140,498,0,1),
	WARPEDH_1( 60, 31, 43,553,0,-1),
	WARPEDH_2( 74, 37, 53,553,0,0),
	WARPEDH_3( 86, 44, 62,553,0,1),
	WARPEDWB_1( 14,127, 93,482,0,-1),
	WARPEDWB_2( 17,155,114,482,0,0),
	WARPEDWB_3( 20,180,133,482,0,1),

	
	DEEPSLATE_1( 70, 70, 70,633,0,-1),
	DEEPSLATE_2( 86, 86, 86,633,0,0),
	DEEPSLATE_3(100,100,100,633,0,1),
	RAWIRON_1(152,123,103,706,0,-1),
	RAWIRON_2(186,150,126,706,0,0),
	RAWIRON_3(216,175,147,706,0,1),
	GLOWLICHEN_1( 89,117,105,666,0,-1),
	GLOWLICHEN_2(109,144,129,666,0,0),
	GLOWLICHEN_3(127,167,150,666,0,1);

//1.16関係

	private int r;
	private int g;
	private int b;
	private int block;
	private int data;
	private int height;

	Color(int r,int g,int b,int block,int data,int height){
		this.r = r;
		this.g = g;
		this.b = b;
		this.block = block;
		this.data = data;
		this.height = height;
	}

	public int getR() {
		return r;
	}

	public int getG() {
		return g;
	}

	public int getB() {
		return b;
	}

	public int getBlock() {
		return block;
	}

	public int getData() {
		return data;
	}

	public int getHeight() {
		return height;
	}
}
